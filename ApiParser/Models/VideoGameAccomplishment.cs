using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace VideoGamesSpa.ApiParser.Models
{
	/// <summary>
	/// Generic video game accomplishment, with basic information, primarily for generation of statistics.
	/// </summary>
	public class VideoGameAccomplishment
	{
		/// <summary>
		/// Title of the achievement/trophy.
		/// </summary>
		public string Title { get; set; }
		public string Id { get; set; }
		public string Image { get; set; }
		public DateTime? Earned { get; set; }
		public string Type { get; set; }
		public string GameTitle { get; set; }
		public string GameId { get; set; }

		public VideoGameAccomplishment()
		{
		}

		/// <summary>
		/// Generates a collection of VideoGameAccomplishment from a PlayStation Network-specific XML file of trophies.
		/// </summary>
		/// <param name="xml">XDocument of serialized List of Trophy.</param>
		/// <seealso cref="Trophy"/>
		public static List<VideoGameAccomplishment> LoadPsnXml(XDocument xml)
		{
			var trophies = Trophy.Load(xml);
			return trophies.Select(t => new VideoGameAccomplishment
			{
				Title = t.Title,
				Id = t.Id,
				Image = t.Image,
				Earned = t.Earned,
				Type = t.Type,
				GameTitle = t.GameTitle,
				GameId = t.GameId
			}).ToList();
		}

		/// <summary>
		/// Generates a collection of VideoGameAccomplishment from a collection of PlayStation Network trophies.
		/// </summary>
		/// <param name="trophies">Collection of trophies generated by this parser.</param>
		/// <seealso cref="Trophy"/>
		public static List<VideoGameAccomplishment> ParseTrophies(IEnumerable<Trophy> trophies)
		{
			return trophies.Select(t => new VideoGameAccomplishment
			{
				Title = t.Title,
				Id = t.Id,
				Image = t.Image,
				Earned = t.Earned,
				Type = t.Type,
				GameTitle = t.GameTitle,
				GameId = t.GameId
			}).ToList();
		}

		/// <summary>
		/// Generates a collection of VideoGameAccomplishment from an Xbox Live-specific XML file of achievements.
		/// </summary>
		/// <param name="xml">XDocument of serialized List of Achievement.</param>
		/// <seealso cref="Achievement"/>
		/*public static List<VideoGameAccomplishment> LoadXblXml(XDocument xml)
		{
			var achievements = Achievement.Load(xml);
			return achievements.Select(a => new VideoGameAccomplishment
			{
				Title = a.Title,
				Id = a.Id,
				Image = a.Image,
				Earned = a.Earned,
				Type = a.GamerScore,
				GameTitle = a.GameTitle,
				GameId = a.GameId
			}).ToList();
		}*/
	}
}
